<?php

namespace App\Services\v1\Product;

use App\Models\Product;
use App\Repositories\ProductRepository;
use App\Services\Contracts\BaseService;
use App\Traits\Makable;
use Illuminate\Database\Eloquent\Model;

/**
 * @extends BaseService<Product>
 * @property ProductRepository $repository
 */
class ProductService extends BaseService
{
    use Makable;

    protected string $repositoryClass = ProductRepository::class;


    public function store(array $data, array $relationships = []): Model
    {
        if (isset($data['is_featured']) && $data['is_featured']) {
            $this->makePreviousFeaturedProductUnFeatured();
        }

        return parent::store($data, $relationships);
    }

    public function update(array $data, $id, array $relationships = []): ?Model
    {
        if (isset($data['is_featured']) && $data['is_featured']) {
            $this->makePreviousFeaturedProductUnFeatured();
        }
        return parent::update($data, $id, $relationships); // TODO: Change the autogenerated stub
    }

    private function makePreviousFeaturedProductUnFeatured(): void
    {
        $this->repository->globalQuery()
            ->where('is_featured', true)
            ->update(['is_featured' => false]);
    }
}
